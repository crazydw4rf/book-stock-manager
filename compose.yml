services:
  backend-api:
    image: book-stock-manager:latest
    build:
      context: .
      dockerfile: Dockerfile
    container_name: book-stock-manager-svc
    env_file: .env
    ports:
      - 127.0.0.1:8080:8080/tcp
    environment:
      - APP_HOST=0.0.0.0
      - APP_PORT=8080
      - DB_HOST=pq-db-book-svc
      - DB_PORT=23211
    depends_on:
      postgres-db:
        condition: service_healthy
    links:
      - postgres-db

  database-migrator:
    image: db-migrator:latest
    container_name: db-migrator-svc
    build:
      context: .
      dockerfile: migrator.Dockerfile
    command: /db/migrations up
    env_file: .env
    environment:
      - DB_HOST=pq-db-book-svc
      - DB_PORT=23211
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=book_stock_manager
    links:
      - postgres-db
    depends_on:
      postgres-db:
        condition: service_healthy

  postgres-db:
    image: postgres:alpine
    container_name: pq-db-book-svc
    volumes:
      - pq-db-book-vol:/var/lib/postgresql/data
    env_file: .db.env
    environment:
      - PGDATA=/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "/usr/local/bin/docker-entrypoint.sh", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pq-db-book-vol:
